{"version":3,"file":"static/js/410.cd276a61.chunk.js","mappings":"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","sources":["pages/SearchPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchDetails } from 'services/api';\nimport { toast } from 'react-toastify';\nimport { ThreeCircles } from 'react-loader-spinner';\nconst toastConfig = {\n  position: 'top-right',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark',\n};\n\nconst SearchPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchTerm = searchParams.get('query');\n  const location = useLocation();\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!searchTerm) return;\n    const fetchPostData = async () => {\n      try {\n        setIsLoading(true);\n\n        const post = await fetchDetails(searchTerm);\n\n        setPosts([post]);\n        toast.success(\n          `Your posts with id ${searchTerm} were successfully fetched!`,\n          toastConfig\n        );\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message, toastConfig);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchPostData();\n  }, [searchTerm]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const searchValue = event.target.children.search.value;\n\n    setSearchParams({\n      query: searchValue,\n    });\n  };\n\n  return (\n    <div>\n      <h1>Search Page</h1>\n      <Link to={backLinkHref.current}>Go back</Link>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Enter post id...\"\n          required\n          minLength={1}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {error !== null && <p className=\"c-error\"> Oops, error.</p>}\n      {isLoading && (\n        <ThreeCircles\n          visible={true}\n          height=\"100\"\n          width=\"100\"\n          color=\"#04e4f9\"\n          ariaLabel=\"three-circles-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n        />\n      )}\n\n      {posts.length > 0 &&\n        posts.map(post => {\n          return (\n            <Link\n              state={{ from: location }}\n              className=\"post\"\n              key={post.id}\n              to={`/post/${post.id}`}\n            >\n              <strong className=\"post-id\">Id: {post.id}</strong>\n              <h4 className=\"post-title\"> {post.title} </h4>\n              <p className=\"post-body\">{post.body}</p>\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default SearchPage;\n"],"names":["toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_location$state$from","_location$state","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","searchTerm","get","location","useLocation","_useState","useState","_useState2","posts","setPosts","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","backLinkHref","useRef","state","from","useEffect","fetchPostData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","post","_context","prev","next","fetchDetails","sent","toast","concat","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","Link","to","current","onSubmit","event","preventDefault","searchValue","target","search","value","query","type","name","placeholder","required","minLength","className","ThreeCircles","visible","height","width","color","ariaLabel","wrapperStyle","wrapperClass","length","map","id","title","body"],"sourceRoot":""}